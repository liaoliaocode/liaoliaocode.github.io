<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>01-关于Vue.js</title>
    <link href="/article/5623/"/>
    <url>/article/5623/</url>
    
    <content type="html"><![CDATA[<h1 id="一、Vue-js-简介"><a href="#一、Vue-js-简介" class="headerlink" title="一、Vue.js 简介"></a>一、Vue.js 简介</h1><p><code class="myCode">Vue</code> 是一套用于构建用户界面的<code class="myCode">渐进式JavaScript框架</code>。(读音 &#x2F;vjuː&#x2F;，类似于 view) </p><p>作者：<a href="https://baike.baidu.com/item/%E5%B0%A4%E9%9B%A8%E6%BA%AA/2281470?fr=aladdinhttps://evanyou.me">尤雨溪（Evan You）</a></p><p>发端于2013年的个人项目，已然成为全世界三大前端框架（Angular，React，Vue）之一，在<code class="myCode">中国大陆更是前端首选</code>。</p><p>它的设计思想、编码技巧也被众多的框架借鉴、模仿。</p><p>详细信息，请访问 <a href="https://cn.vuejs.org/">Vue 官网</a> 。</p><hr><p>知乎上有人发起了一个 “<code class="myCode">react</code> 是不是比 <code class="myCode">vue</code> 牛皮，为什么？” 的问题，<code class="myCode">Vue.js</code> 作者<code class="myCode">尤雨溪</code>正面回应了该问题：<br>“作为一个个人项目的 Vue 没有这样的宣传资源，也并不是为了改变用户。<br>所以从设计的角度上来说，Vue 首先考虑的是假设用户只掌握了 web 基础知识 (HTML, CSS, JS) 的情况下，<br>如何能够最快理解和上手，实现一个看得见摸得着的应用。”</p><h1 id="二、发展历程"><a href="#二、发展历程" class="headerlink" title="二、发展历程"></a>二、发展历程</h1><h2 id="1-x-）（2015年10月～）"><a href="#1-x-）（2015年10月～）" class="headerlink" title="1.x ）（2015年10月～）"></a>1.x ）（2015年10月～）</h2><p>Vue最初的目标是成为大型项目的一个良好补充。<br>设计思想是一种“渐进式框架”，淡化框架本身的主张，降低框架作为工具的复杂度，从而降低对使用者的要求。</p><p>1.x 具有以下特点：</p><ol><li>提供指令的缩写</li><li>清理精简所提供的接口</li><li>提高初始化的渲染效率</li><li>两个官方工具的增强：<code class="myCode">vue-loader</code>和<code class="myCode">vueify</code></li></ol><h2 id="2-x-）（2016年9月～）"><a href="#2-x-）（2016年9月～）" class="headerlink" title="2.x ）（2016年9月～）"></a>2.x ）（2016年9月～）</h2><p>2016年10月1日发布的2.0版本对Vue做了大幅度的重构，性能有了很大的提高，也为日后的跨端发展打下了基础。</p><p>2.x 具有以下特点：</p><ol><li><code class="myCode">Virtual DOM</code></li><li>清理精简所提供的接口</li><li>提高初始化的渲染效率</li><li>两个官方工具的增强：<code class="myCode">vue-loader</code>和<code class="myCode">vueify</code></li><li><code class="myCode">slot</code>语法更新</li><li>异步错误处理</li><li>动态指令参数</li><li>编译器警告位置信息</li><li>显式创建独立的响应式对象</li><li>新 <code class="myCode">ES</code> 模块构建，可直接导入使用</li><li>让 <code class="myCode">nextTick</code> 恢复使用 Microtask</code></li><li><code class="myCode">this.$scopedSlots</code> 函数统一返回数组</li></ol><h2 id="3-x-）（2020年9月～）"><a href="#3-x-）（2020年9月～）" class="headerlink" title="3.x ）（2020年9月～）"></a>3.x ）（2020年9月～）</h2><p>3.x是非常大的重构，源码使用<code class="myCode">TypeScript</code>重写，并且还有许多令人期待的新特性。</p><p>3.x 具有以下特点：</p><ol><li><code class="myCode">Virtual DOM</code>完全重构</li><li>使用<code class="myCode">Proxy</code>代替<code class="myCode">defineProperty</code></li><li>使用<code class="myCode">TypeScript</code>重构</li><li>自定义的<code class="myCode">Renderer API</code></li><li>支持<code class="myCode">Time Slicing</code></li></ol><h1 id="三、安装方法"><a href="#三、安装方法" class="headerlink" title="三、安装方法"></a>三、安装方法</h1><p>将 <code class="myCode">Vue.js</code> 添加到项目中主要有四种方式：</p><ol><li><p>在页面上以 <code class="myCode">CDN</code> 包的形式导入。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--最新稳定版--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/vue@next&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--指定具体版本--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>下载 <code class="myCode">javascript</code> 文件并自行托管。</p><p>点击 <a href="https://cn.vuejs.org/js/vue.js">vue.js</a> 下载</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--引用本地的js文件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/vue.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>使用 <code class="myCode">npm</code> 安装它。</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-comment"># 最新稳定版</span><br><span class="hljs-built_in">npm</span> install vue@next<br></code></pre></td></tr></table></figure></li><li><p>使用官方的 <code class="myCode">CLI</code> 来构建一个项目，它为现代前端工作流程提供了功能齐备的构建设置 (例如，热重载、保存时的提示等等)。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">yarn <span class="hljs-keyword">global</span> add <span class="hljs-symbol">@vue</span>/cli<br><span class="hljs-meta"># 或</span><br>npm install -g <span class="hljs-symbol">@vue</span>/cli<br></code></pre></td></tr></table></figure></li></ol><h3 id="本学习教程，使用第2种方式，进行讲解。"><a href="#本学习教程，使用第2种方式，进行讲解。" class="headerlink" title="本学习教程，使用第2种方式，进行讲解。"></a>本学习教程，使用第2种方式，进行讲解。</h3><h4 id="如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（-o-）v"><a href="#如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（-o-）v" class="headerlink" title="如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（^o^）v"></a><span class="footer">如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（^o^）v</span></h4>]]></content>
    
    
    <categories>
      
      <category>web前端开发</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>02-插值表达式</title>
    <link href="/article/d1de/"/>
    <url>/article/d1de/</url>
    
    <content type="html"><![CDATA[<h1 id="插值表达式："><a href="#插值表达式：" class="headerlink" title="插值表达式： "></a>插值表达式： <code class="myCode">&#123;&#123; &#125;&#125;</code></h1><ul><li>可以将vue中的数据填写在插值表达式中</li><li>也可以直接填写数值、数组、对象等。</li><li>可以填写表达式，但是不能写流程语句。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>01_插值表达式<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123; student.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123; student.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>100 * 2 = &#123;&#123; 100*2 &#125;&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>&#123;&#123; 1 + 1 === 2 ? &quot;正确&quot; : &quot;错误&quot; &#125;&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/vue.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,</span><br><span class="language-javascript"><span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-attr">message</span>: <span class="hljs-string">&quot;Hello World&quot;</span>,</span><br><span class="language-javascript"><span class="hljs-attr">student</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-attr">id</span>: <span class="hljs-number">123</span>,</span><br><span class="language-javascript"><span class="hljs-attr">name</span>: <span class="hljs-string">&quot;张三&quot;</span></span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>浏览器中的显示结果</p><img src="/article/d1de/20220410_190748_image.png" class=""><p><code class="myCode">注意：尽量中间加上空格，否则遇到一个对象的时候，会报错。也不能使用未声明的变量。</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- Error compiling template --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span>&#123;&#123;&#123;a:1&#125;&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（-o-）v"><a href="#如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（-o-）v" class="headerlink" title="如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（^o^）v"></a><span class="footer">如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（^o^）v</span></h4>]]></content>
    
    
    <categories>
      
      <category>web前端开发</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>03-Vue指令之v-text和v-html</title>
    <link href="/article/9186/"/>
    <url>/article/9186/</url>
    
    <content type="html"><![CDATA[<h1 id="Vue指令：v-text和v-html"><a href="#Vue指令：v-text和v-html" class="headerlink" title="Vue指令：v-text和v-html"></a>Vue指令：<code class="myCode">v-text</code>和<code class="myCode">v-html</code></h1><ul><li><code class="myCode">v-html</code>：相当于 <code class="myCode">innerHTML</code> 。内容按普通 <code class="myCode">HTML</code> 插入，不会作为 <code class="myCode">Vue</code> 模板进行编译</li><li><code class="myCode">v-text</code>：相当于 <code class="myCode">textContent</code> 。<code class="myCode">v-text</code>会替换元素中所有的文本，包括子元素。优先级比插值表达式高。</li></ul><p>注意：小心XXS攻击，在可信内容上使用<code class="myCode">v-html</code>，拒绝用户交互下使用该指令。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>02_vue指令之v-text和v-html<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123; message &#125;&#125; 这里内容不会被覆盖<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">&quot;message&quot;</span>&gt;</span> 这里内容会被覆盖<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">&quot;message&quot;</span>&gt;</span> 这里内容会被覆盖<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;js/vue.js&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">var</span> vm = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Vue</span>(&#123;</span><br><span class="language-javascript"><span class="hljs-attr">el</span>: <span class="hljs-string">&quot;#app&quot;</span>,</span><br><span class="language-javascript"><span class="hljs-attr">data</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-attr">message</span>: <span class="hljs-string">&quot;&lt;strong&gt;Hello World&lt;/strong&gt;&quot;</span></span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>浏览器中的显示结果</p><img src="/article/9186/20220411_210941_image.png" class=""><h4 id="如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（-o-）v"><a href="#如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（-o-）v" class="headerlink" title="如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（^o^）v"></a><span class="footer">如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（^o^）v</span></h4>]]></content>
    
    
    <categories>
      
      <category>web前端开发</category>
      
      <category>Vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web前端</tag>
      
      <tag>Vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何使用Hexo搭建属于自己的博客</title>
    <link href="/article/5d8f/"/>
    <url>/article/5d8f/</url>
    
    <content type="html"><![CDATA[<h1 id="如何使用Hexo搭建属于自己的博客"><a href="#如何使用Hexo搭建属于自己的博客" class="headerlink" title="如何使用Hexo搭建属于自己的博客"></a>如何使用Hexo搭建属于自己的博客</h1><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><ol><li>申请<code class="myCode">GitHub</code>账号</li><li>安装<code class="myCode">Git</code></li><li>安装<code class="myCode">NodeJS</code></li></ol><h2 id="二、创建仓库"><a href="#二、创建仓库" class="headerlink" title="二、创建仓库"></a>二、创建仓库</h2><p>在<code class="myCode">GitHub</code>上创建一个新的代码仓库用于保存我们的网页。<br>点击<code class="myCode">Your repositories</code> ，进入仓库页面。</p><img src="/article/5d8f/20220403_223333_image.png" class=""><p>填写仓库名，格式必须为<code class="myCode"><用户名>.github.io</code>，然后点击<code class="myCode">Create repository</code></p><img src="/article/5d8f/20220404_001804_image.png" class=""><h2 id="三、安装Hexo"><a href="#三、安装Hexo" class="headerlink" title="三、安装Hexo"></a>三、安装Hexo</h2><p>我们采用Hexo来创建我们的博客网站，<code class="myCode">Hexo</code> 是一个基于<code class="myCode">NodeJS</code>的静态博客网站生成器，使用<code class="myCode">Hexo</code>不需开发，只要进行一些必要的配置即可生成一个个性化的博客网站，非常方便。点击进入<a href="https://hexo.io/">https://hexo.io</a>官网。</p><ol><li><p>安装 <code class="myCode">Hexo</code></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure></li><li><p>查看版本</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo -v</span><br></code></pre></td></tr></table></figure></li><li><p>创建一个项目 <code class="myCode">hexo-blog</code> 并初始化</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">hexo init hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install</span><br></code></pre></td></tr></table></figure></li><li><p>本地启动</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure></li><li><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></p></li></ol><h2 id="四、更换主题"><a href="#四、更换主题" class="headerlink" title="四、更换主题"></a>四、更换主题</h2><p><code class="myCode">Fluid</code>主题官网： <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><ol><li><p>指定主题</p><p>如下修改 <code class="myCode">Hexo</code> 博客目录中的 <code class="myCode">_config.yml</code> ：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid<br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN<br></code></pre></td></tr></table></figure></li><li><p>创建 <code class="myCode">关于页</code></p><p>首次使用主题的 <code class="myCode">关于页</code> 需要手动创建</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">page</span> about<br></code></pre></td></tr></table></figure><p>创建成功后，编辑博客目录下 <code class="myCode">/source/about/index.md</code>，添加 <code class="myCode">layout</code> 属性</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-04-01 19:20:23</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure></li><li><p>本地启动</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g -d</span><br><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure></li><li><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></p></li></ol><h2 id="五、创建文章"><a href="#五、创建文章" class="headerlink" title="五、创建文章"></a>五、创建文章</h2><p>如下修改 <code class="myCode">Hexo</code> 博客目录中的 <code class="myCode">_config.yml</code> ，<br>打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>执行如下命令创建一篇新文章，名为 <code class="myCode">测试文章</code></p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs haxe">hexo <span class="hljs-keyword">new</span> <span class="hljs-type">post</span> 测试文章<br></code></pre></td></tr></table></figure><p>执行完成后在<code class="myCode">source_posts</code>目录下生成了一个<code class="myCode">md文件</code>和一个同名的<code class="myCode">资源目录</code>(用于存放图片)</p><p>图片引用方法</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">asset_img</span> test.png  %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="六、个性化页面展示"><a href="#六、个性化页面展示" class="headerlink" title="六、个性化页面展示"></a>六、个性化页面展示</h2><p>页面的标题等位置显示默认的文字，可以改下显示一些个性化的信息。</p><ol><li><p>浏览器<code class="myCode">tab页</code>名称<br>修改根目录下 <code class="myCode">_config.yml</code> 中的 <code class="myCode">title</code> 字段。</p></li><li><p>博客标题<br>主题目录 <code class="myCode">themes\fluid</code> 下 <code class="myCode">_config.yml</code> 中的 <code class="myCode">blog_title</code> 字段。</p></li><li><p>主页正中间的文字<br>主题目录 <code class="myCode">themes\fluid</code> 下 <code class="myCode">_config.yml</code> 中的 <code class="myCode">text</code> 字段。</p></li></ol><h2 id="七、添加阅读量统计"><a href="#七、添加阅读量统计" class="headerlink" title="七、添加阅读量统计"></a>七、添加阅读量统计</h2><p><code class="myCode">Fluid</code> 主题写好了统计阅读量的代码，但是缺少相应配置所以没有开启，需要借助三方服务来统计阅读量，<br>这里是有 <code class="myCode">Leancloud</code> 的免费服务来进行统计。</p><ol><li><p>申请<code class="myCode">LeanCloud</code>账号并创建应用<br>LeanCloud官网: <a href="https://console.leancloud.cn/login?from=/apps">https://console.leancloud.cn/login?from=%2Fapps</a></p><p>创建应用，选择开发版即可，免费的<br>进入该应用的 设置-&gt;应用凭证，找到 <code class="myCode">AppID</code> 和 <code class="myCode">AppKey</code>，记录下来后面配置要用</p></li><li><p>修改<code class="myCode">Fluid</code> 配置<br>打开主题目录 <code class="myCode">themes\fluid</code> 下的 <code class="myCode">_config.yml</code> 文件，修改如下配置<br>单篇文章阅读量计数  打开统计开关</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">web_analytics:</span>  <span class="hljs-comment"># 网页访问统计</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><ol start="3"><li><p>配置 <code class="myCode">leancloud</code> 的 <code class="myCode">app_id</code> 和 <code class="myCode">app_key</code></p></li><li><p>打开计数功能，统计来源改为 <code class="myCode">leancloud</code></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">views:<br>    <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br>    <span class="hljs-comment"># 统计数据来源</span><br>    <span class="hljs-comment"># Data Source</span><br>    <span class="hljs-comment"># Options: busuanzi | leancloud</span><br>    <span class="hljs-built_in">source</span>: <span class="hljs-string">&quot;leancloud&quot;</span><br></code></pre></td></tr></table></figure><ol start="5"><li>页面底部展示网站的 <code class="myCode">PV、UV</code> 统计数</li></ol><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">statistics:</span><br><span class="hljs-symbol">enable:</span> true<br><br><span class="hljs-meta"># Options: busuanzi | leancloud</span><br><span class="hljs-symbol">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span><br></code></pre></td></tr></table></figure><h2 id="八、添加评论功能"><a href="#八、添加评论功能" class="headerlink" title="八、添加评论功能"></a>八、添加评论功能</h2><p>评论功能的代码已经写好了，只不过没有开启，需要修改一些配置<br>打开主题目录 <code class="myCode">themes\fluid</code> 下的 <code class="myCode">_config.yml</code> 文件，修改如下配置</p><p>启用评论插件</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs coq">comments:<br>enable: true<br># <span class="hljs-keyword">Options</span>: utterances | <span class="hljs-type">disqus</span> | <span class="hljs-type">gitalk</span> | <span class="hljs-type">valine</span> | <span class="hljs-type">waline</span> | <span class="hljs-type">changyan</span> | <span class="hljs-type">livere</span> | <span class="hljs-type">remark42</span> | <span class="hljs-type">twikoo</span> | <span class="hljs-type">cusdis</span><br>type: valine<br></code></pre></td></tr></table></figure><p>配置 <code class="myCode">leancloud</code> 的 <code class="myCode">app_id</code> 和 <code class="myCode">app_key</code></p><h2 id="九、发布到GitHub-Pages"><a href="#九、发布到GitHub-Pages" class="headerlink" title="九、发布到GitHub Pages"></a>九、发布到GitHub Pages</h2><p>安装<code class="myCode">hexo-deployer-git</code></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>修改根目录下的 <code class="myCode">_config.yml</code> ，配置 <code class="myCode">GitHub</code> 相关信息</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/&lt;用户id&gt;/&lt;用户id&gt;.github.io.git</span><br><span class="hljs-symbol">  branch:</span> main<br></code></pre></td></tr></table></figure><p>部署到<code class="myCode">GitHub</code> ，可按以下三步来进行。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo clean<br>hexo <span class="hljs-keyword">generate</span> 或 hexo g<br>hexo deploy 或 hexo d<br><br></code></pre></td></tr></table></figure><h2 id="十、一些常用命令"><a href="#十、一些常用命令" class="headerlink" title="十、一些常用命令"></a>十、一些常用命令</h2><p><code class="myCode">hexo</code> 常用命令：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;postName&quot;</span> <span class="hljs-meta">#新建文章</span><br>hexo <span class="hljs-keyword">new</span> page <span class="hljs-string">&quot;pageName&quot;</span> <span class="hljs-meta">#新建页面</span><br>hexo generate <span class="hljs-meta">#生成静态页面至public目录</span><br>hexo <span class="hljs-keyword">server</span> <span class="hljs-meta">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br>hexo deploy <span class="hljs-meta">#将.deploy目录部署到GitHub</span><br>hexo help  <span class="hljs-meta">#查看帮助</span><br>hexo version  <span class="hljs-meta">#查看Hexo的版本</span><br><br></code></pre></td></tr></table></figure><p><code class="myCode">git</code> 常用命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">git config --list<br>git config --global user.name <span class="hljs-string">&quot;&lt;用户id&gt;&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;&lt;用户email&gt;&quot;</span><br><br>git init<br>git remote add origin https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/&lt;用户id&gt;/</span>&lt;用户id&gt;.github.io.git<br><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/&lt;用户id&gt;/</span>xxxx.git<br></code></pre></td></tr></table></figure><h2 id="十一、最终效果展示"><a href="#十一、最终效果展示" class="headerlink" title="十一、最终效果展示"></a>十一、最终效果展示</h2><p>可访问如下地址查看  <a href="https://liaoliaocode.github.io/">https://liaoliaocode.github.io</a></p><p>以上为 <code class="myCode">Hexo</code> 搭建个人博客 全过程，详细内容请参考 <a href="https://fluid-dev.github.io/hexo-fluid-docs/">Hexo Fluid 用户手册</a></p><h4 id="如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（-o-）v"><a href="#如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（-o-）v" class="headerlink" title="如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（^o^）v"></a><span class="footer">如有任何问题，欢迎在下面评论区留言，让我们共同进步，非常感谢！（^o^）v</span></h4>]]></content>
    
    
    <categories>
      
      <category>web建站</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
      <tag>博客</tag>
      
      <tag>github</tag>
      
      <tag>git</tag>
      
      <tag>nodejs</tag>
      
      <tag>npm</tag>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
